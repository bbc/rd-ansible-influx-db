---
# module: rd-ansible-influx-db/tasks/configure
# description: Configure rd-ansible-influx-db

- name: Check current users
  shell: "influx -username {{ influx_db_user }} -password {{ influx_db_password }} -execute \"SHOW USERS\""
  changed_when: false
  failed_when: false
  args:
    warn: no
  register: users

- name: Add user
  shell: "influx -username {{ influx_db_user }} -password {{ influx_db_password }} -execute \"CREATE USER {{ influx_db_user }} WITH PASSWORD '{{ influx_db_password }}' WITH ALL PRIVILEGES\""
  args:
    warn: no
  when: not users.stdout is search(influx_db_user)

- name: Fix up influxdb config
  lineinfile:
    dest: "{{ influx_db_config_location }}"
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
  with_items:
    - { line: "auth-enabled = true", regexp: 'auth-enabled ='}
  notify: restart_influxdb

- name: Fix up kapacitor config
  replace:
    path: /etc/kapacitor/kapacitor.conf
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
    after: '.+http://localhost:8086*'
    before: '  # Absolute path to pem encoded CA file.'
  with_items:
    - { line: '  username = "{{ influx_db_user }}"', regexp: '  username = ""'}
    - { line: '  password = "{{ influx_db_password }}"', regexp: '  password = ""'}
  notify: restart_kapacitor
  when: influx_db_enable_kapacitor

- name: Force restart service after reread config
  meta: flush_handlers

- name: Make sure service is running and starts on boot
  service:
    name: "{{ item }}"
    enabled: true
    state: started
  with_items: "{{ packages }}"
